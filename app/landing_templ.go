// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package app

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

type capability struct {
	Title       string
	Description string
}

var platformCapabilities = []capability{
	{
		Title:       "Model companies and hierarchies",
		Description: "Register new companies, set active status, and invite operators with role-aware access controls.",
	},
	{
		Title:       "Map customers and contracts",
		Description: "Connect customers to contracts, attach supporting performance obligations, and see fulfillment status in one view.",
	},
	{
		Title:       "Bundle products with intent",
		Description: "Compose products into bundles, reuse obligations, and reuse pricing packages across revenue workflows.",
	},
	{
		Title:       "Operational tooling ready",
		Description: "Reset seed data, audit recent imports, and manage administrative tasks without leaving the dashboard.",
	},
}

func Layout(title string, body templ.Component) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `landing.templ`, Line: 33, Col: 26}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</title><link rel=\"preload\" href=\"fonts/Inter-400.ttf\" as=\"font\" type=\"font/ttf\" crossorigin><link rel=\"preload\" href=\"fonts/Inter-500.ttf\" as=\"font\" type=\"font/ttf\" crossorigin><link rel=\"preload\" href=\"fonts/Inter-600.ttf\" as=\"font\" type=\"font/ttf\" crossorigin><link rel=\"preload\" href=\"fonts/Inter-700.ttf\" as=\"font\" type=\"font/ttf\" crossorigin><link rel=\"stylesheet\" href=\"styles.css\"></head><body class=\"is-loading\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = body.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<script>\n                (function () {\n                    function removeLoadingClass() {\n                        document.body.classList.remove('is-loading');\n                    }\n                    if (document.readyState === 'loading') {\n                        document.addEventListener('DOMContentLoaded', removeLoadingClass, { once: true });\n                    } else {\n                        removeLoadingClass();\n                    }\n                    function injectHTMX() {\n                        if (document.documentElement.dataset.htmxLoaded) return;\n                        document.documentElement.dataset.htmxLoaded = 'true';\n                        var script = document.createElement('script');\n                        script.src = 'https://cdn.jsdelivr.net/npm/htmx.org@2.0.7/dist/htmx.min.js';\n                        script.integrity = 'sha384-ZBXiYtYQ6hJ2Y0ZNoYuI+Nq5MqWBr+chMrS/RkXpNzQCApHEhOt2aY8EJgqwHLkJ';\n                        script.crossOrigin = 'anonymous';\n                        document.head.appendChild(script);\n                    }\n                    if ('requestIdleCallback' in window) {\n                        requestIdleCallback(injectHTMX);\n                    } else {\n                        window.addEventListener('load', injectHTMX, { once: true });\n                    }\n                })();\n            </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func LandingPage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = Layout("RevProject Portal", LandingContent()).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func LandingContent() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<main><section class=\"hero\"><span class=\"hero-kicker\">Revenue Operations Platform</span><h1>Bring companies, customers, products, and bundles together.</h1><p>RevProject orchestrates your revenue workflow with a single contract command center. Track fulfillment, manage performance obligations, and align finance and GTM teams without duct tape spreadsheets.</p><ul><li><svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M20 6L9 17l-5-5\"></path></svg> Contract-centric workspace with real-time status changes.</li><li><svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M3 6h18M3 12h12M3 18h6\"></path></svg> Coordinated updates flow through HTMX-powered UI fragments.</li><li><svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 20l9-5-9-5-9 5 9 5z\"></path> <path d=\"M12 12l9-5-9-5-9 5 9 5z\"></path></svg> Secure JWT-backed sessions across admin and operating teams.</li></ul></section><section class=\"card highlight-card\"><header><h2>Power your revenue teams</h2><p class=\"card-subtitle\">Spin up RevProject, connect your contracts, and invite operators when you are ready.</p></header><dl class=\"capability-metrics\"><div><dt>Contracts managed</dt><dd>Instant visibility into performance obligations per customer.</dd></div><div><dt>Roles aligned</dt><dd>Owners, operators, and admins stay in sync with fine-grained permissions.</dd></div><div><dt>Admin tooling</dt><dd>Reset data, review audit logs, and seed demo-tenants without touching SQL.</dd></div></dl></section><section class=\"card login-cta\"><h2>Ready to put RevProject to work?</h2><p>Secure sign-in routes you straight to the operational console. Bring your company ID and team credentials to keep your revenue process connected.</p><div class=\"cta-actions\"><a class=\"primary-button\" href=\"/login\">Go to login</a><p>Need access? <a href=\"/request-access\" class=\"form-link\">Request a company workspace</a> and we will provision a sandbox for you.</p></div></section><section class=\"feature-grid\" aria-labelledby=\"platform-feature-heading\"><header><h2 id=\"platform-feature-heading\">Built for RevOps orchestration</h2><p>Every capability maps directly to the APIs already shipping in this codebase.</p></header><ul>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, item := range platformCapabilities {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<li><h3>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(item.Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `landing.templ`, Line: 154, Col: 40}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</h3><p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(item.Description)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `landing.templ`, Line: 155, Col: 45}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</p><button class=\"ghost-button\" hx-get=\"/docs/capabilities\" hx-vals=\"js:{ focus: this.dataset.focus }\" data-focus=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(item.Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `landing.templ`, Line: 160, Col: 51}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\" hx-target=\"#capability-details\" hx-trigger=\"click\">View API surface</button></li>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</ul></section><section id=\"capability-details\" class=\"capability-details\" aria-live=\"polite\"><!-- HTMX responses with deeper capability docs land here. --></section></main>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
