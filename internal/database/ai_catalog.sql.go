// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: ai_catalog.sql

package database

import (
	"context"

	"github.com/lib/pq"
)

const listAIProviderCatalogEntries = `-- name: ListAIProviderCatalogEntries :many
SELECT
    id,
    label,
    icon_url,
    description,
    documentation_url,
    capabilities,
    models,
    fields,
    enabled,
    created_at,
    updated_at
FROM ai_provider_catalog
WHERE enabled = TRUE
ORDER BY id
`

func (q *Queries) ListAIProviderCatalogEntries(ctx context.Context) ([]AiProviderCatalog, error) {
	rows, err := q.db.QueryContext(ctx, listAIProviderCatalogEntries)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []AiProviderCatalog
	for rows.Next() {
		var i AiProviderCatalog
		if err := rows.Scan(
			&i.ID,
			&i.Label,
			&i.IconUrl,
			&i.Description,
			&i.DocumentationUrl,
			pq.Array(&i.Capabilities),
			pq.Array(&i.Models),
			&i.Fields,
			&i.Enabled,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
